'use strict';

//#### Task 1 üñ•
const colors = ['red', 'green', 'blue']
console.log(colors.length);

//#### Task 2 üñ•

const animals = ['monkey', 'dog', 'cat']
console.log(animals[animals.length - 1]);

//#### Task 3 üñ•

const numbers = [5, 43, 63, 23, 90]
//–ø–µ—Ä–≤—ã–π —Å–ø–æ—Å–æ–± 
numbers.length = 0;
console.log(numbers);
//–≤—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± 
for (i = 0; i < numbers.length; i++)numbers.splice(i)
console.log(numbers);

//#### Task 4 üñ•

const students = ['Polina', 'Dasha', 'Masha']
students.pop();
students.push(`Borya`)
console.log(students);
students.shift();
students.unshift(`Andrey`);
console.log(students);

//#### Task 5 üñ•

const cats = ['Gachito', 'Tom', 'Batman']
//1
for (let i = 0; i < cats.length; i++) {
    console.log(cats[i]);
}
//2
for (let x of cats) {
    console.log(x);
}


//#### Task 6 üñ•

const evenNumbers = [2, 4, 6, 8, 10]
const oddNumbers = [1, 3, 5, 7, 9]

let numbers = evenNumbers.concat(oddNumbers);
console.log(numbers);
console.log(numbers.indexOf(8));

//#### Task 7 üñ•

const binary = [0, 0, 0, 0]

let str = binary.join('1')
console.log(str);

//### ADVANCED level

//#### Task 1 üë®‚Äçüè´

palindrome('racecar')//true
palindrome('car')//false
function palindrome(str){
    return str ===str.split('').reverse().join('');
}

//#### Task 2 üë®‚Äçüè´
// –í–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å —ç—Ç–∏–º –∑–∞–¥–∞–Ω–∏–µ , —Å —Å–∞–º–∏–º –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–º –º–∞—Å—Å–∏–≤–æ–º , –µ—Å–ª–∏ —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É , —Ç–æ –≤—Å–µ —Ö–æ—Ä–æ—à–æ )
// –±—É–¥—É –µ—â–µ –¥—É–º–∞—Ç—å –∫–∞–∫ —Å–¥–µ–ª—Ç—å —ç—Ç–æ —Å –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–º –º–∞—Å—Å–∏–≤–æ–º 
const matrix = [
    12, 98, 78, 65, 23,
    // [54, 76, 98, 43, 65],
    // [13, 324, 65, 312],
    // [9092, 22, 45, 90000],
]
let sum = 0;
for (let i = 0; i < matrix.length; i++) {
    sum += matrix[i];
}

let result = sum/matrix.length;
console.log(result);

// –û—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ 