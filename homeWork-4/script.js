'use strict';

// #### Task 1 üíª

function getSum(n) {
    let sum = 0;
    for (let i = 1; i <= n; i++) {
        sum += i;
    }
    return sum;
}

alert(getSum(100));

// #### Task 2 üíª

function getOverpayment(money) {
    let percent = 17;
    let year = 5;
    return money * percent / 100 * year;
}
let result = prompt('–ö–∞–∫–∞—è —Å—É–º–º–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?');
alert(`–í–∞—à–∞ –ø–µ—Ä–µ–ø–ª–∞—Ç–∞  ${getOverpayment(result)} `);

// #### Task 3 üíª
// –±—ã–ª–∏ –Ω–µ–±–æ–ª—å—à–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å  –ø–æ–Ω–∏–º–∞–µ–º –∑–∞–¥–∞–Ω–∏—è.
function trimString(string, from, to) {
    let trim = string.slice(from, to);
    return trim;
}
let word = prompt('–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ', '');
let cutFrom = prompt('–ù–∞—á–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª?', '');
let cutTo = prompt(' –ö–æ–Ω–µ—á–Ω—ã–π —Å–∏–º–≤–æ–ª–æ–º ?', '');
alert(trimString(word, cutFrom, cutTo));

// #### Task 4 üíª

function getSumNumber(num) {
    let sum = 0;
    let tmp;
    while (num) {
        tmp = num % 10;
        num = (num - tmp) / 10;
        sum += tmp;
    }
    return sum;
}

alert(getSumNumber(2021));

// #### Task 5 üíª

function getSum(a, b) {
    let result;
    if (a < b) {
        result = a;
        for (let i = a + 1; i <= b; i++) {
            result += i;
        }
        return result;
    } else if (a > b) {
        result = b;
        for (let i = b + 1; i <= a; i++) {
            result += i;
        }
        return result;
    } else {
        return result = a;
    }
}
console.log(getSum(10, -8));

// #### Task 6 üíª

function fooboo(bool, foo, boo) {
    if (bool) {
        return foo();
    } else {
        return boo();
    }
}
let bool = true;
let foo = function () {
    console.log('foo');
}
let boo = function () {
    console.log('boo');
}
fooboo(bool, foo, boo);



// ### ADVANCED level

// #### Task 1 üë®‚Äçüè´ 

let arr = new Array(3);
let i;
for (i = 0; i < 3; i++) {
    arr[i] = +prompt("–í–≤–µ–¥–∏—Ç–µ " + (i + 1) + " —Å—Ç–æ—Ä–æ–Ω—É:", "");
}

function trangel(arr) {
    if (arr[0] < (arr[1] + arr[2]) && arr[1] < (arr[0] + arr[2]) && arr[2] < (arr[0] + arr[1])) {
        alert("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Å —Ç–∞–∫–∏–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
    } else {
        alert("–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ —Å —Ç–∞–∫–∏–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏ –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
    }
}
trangel(arr);


// #### Task 2 üë®‚Äçüè´

function getChocolateBar(x, y) {
    if (x >= 1 && y >= 1) {
        return (x * y) - 1;
    } else {
        console.log('False');
    }
}
let chocolateResult = getChocolateBar(6, 2);
console.log(`–ù—É–∂–Ω–æ: ${chocolateResult} –Ω–∞–¥–ª–æ–º–æ–≤`);

// #### Task 3 üë®‚Äçüè´ 

function calcCostPhone() {
    let balanceCard = +prompt('–≤–≤–µ–¥–∏—Ç–µ –æ—Å—Ç–∞—Ç–æ–∫ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ!','');
    let costPhone = +prompt('–≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω–∞','');
    let costAccessory = +prompt('–≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞','');
    let colBuy = 0;
    let sumBuy = costPhone + costAccessory + taxRate();
    console.log(sumBuy);
    if (balanceCard < sumBuy) {
        return alert('–£ –í–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤');
    } else {
        for (let i = 1; balanceCard >= sumBuy; i++) {
            sumBuy *= i;
            balanceCard -= sumBuy;
            colBuy += i;
        }
        alert(`–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏: ${sumBuy.toFixed(2)} BYN`);
        return alert(`–í—ã –∫—É–ø–∏–ª–∏ ${colBuy} —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤`);
    }
    function taxRate() {
        let procent = +prompt('–≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –Ω–∞–ª–æ–≥–∞','');
       return ((costPhone + costAccessory) / 100) * procent;
    }
}
calcCostPhone();