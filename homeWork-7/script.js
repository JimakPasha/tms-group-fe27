"use strict";

/* Task 1
–í—ã–≤–µ–¥–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ **`forEach`***/

{
   const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987,];
   console.log(fibonacci);

   //arrow function
   fibonacci.forEach(item => console.log(item));

   //function declaration
   for (index = 0; index < fibonacci.length; index++) {
      console.log(fibonacci[index]);
   }
}

/* Task 2
–ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ **`map`** —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–∞ **`users`**, 
–≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞:['member 1: Darya', 'member 2: Masha', ... etc]*/

{
   const users = ["Darya", "Masha", "Denis", "Vitaliy", "Polina", "Anton",];
   console.log(users);

   //arrow function
   const usersMap1 = users.map(item => "member 1: " + item);
   console.log(usersMap1);

   //–∏–ª–∏ —Ç–∞–∫
   const usersMap11 = users.map(index => ("member 1: " + users[index]));
   console.log(usersMap11);

   //function declaration
   const usersMap2 = [];
   for (let item of users) {
      usersMap2.push("member 1: " + item);
   }

   console.log(usersMap2);

   //–∏–ª–∏ —Ç–∞–∫
   const usersMap3 = [];
   for (let index = 0; index < users.length; index++) {
      usersMap3.push("member 1: " + users[index]);
   }

   console.log(usersMap3);
}

/*Task 3
–° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ **`filter`** —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.*/
{
   const numbers = [7, -4, 32, -90, 54, 32, -21,];
   console.log(numbers);

   //arrow function
   const numbersPlus = numbers.filter((item) => {
      return item > 0;
   });

   console.log(numbersPlus);

   //function declaration
   const numbersPlus2 = numbers.filter(function (item) {
      if (item > 0) {
         return true;
      }
   })

   console.log(numbersPlus2);
}

/*Task 4
–ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ **`reduce`** –ø–æ–ª—É—á–∏—Ç–µ —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª –º–∞—Å—Å–∏–≤–∞.*/

{
   const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987,];

   //arrow function
   const result = fibonacci.reduce((sum, item) => {
      return sum + item;
   });
   console.log(result);

   //function declaration
   const result2 = fibonacci.reduce(function (sum, item) {
      return sum + item;
   }, 0);//0 –º–æ–∂–Ω–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å

   console.log(result2);
}

/*Task 5
–ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ **`find`** –Ω–∞–π–¥–∏—Ç–µ –≤ –º–∞—Å—Å–∏–≤–µ –ø–µ—Ä–≤–æ–µ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ.*/
{
   const numbers = [5, 9, 13, 24, 54, 10, 13, 99, 1, 5,];

   //arrow function
   const numbersFirst = numbers.find((item) => item % 2 == 0);
   console.log(numbersFirst);

   //function declaration
   const numbersPlus2 = numbers.find(function (item) {
      return item % 2 == 0;
   });

   console.log(numbersPlus2);
}

/*Task 1.1
+ –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä **Student**
+ –í –∫–∞–∂–¥–æ–º –æ–±—ä–µ–∫—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª—è **salary** , **rate** , **name**
+ –í–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞. 
+ –ù–∞ –æ—Å–Ω–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—Ç—å –º–∏–Ω–∏–º—É–º 5 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –∏–º—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏–º–µ–Ω–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã. 

+ –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ **students** –∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ –Ω–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.
+ –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –ò –≤—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â—É—é —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å –≥—Ä—É–ø–ø–µ.

**rate** –∏–º–µ–µ—Ç 4 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ A B C D
+ **A** - –æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ 12 –µ–≥–æ –∑–∞—Ä–ø–ª–∞—Ç
+ **B** - —Ö–æ—Ä–æ—à–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ 9 –µ–≥–æ –∑–∞—Ä–ø–ª–∞—Ç
+ **C** - –Ω–µ–ø–ª–æ—Ö–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ 6 –µ–≥–æ –∑–∞—Ä–ø–ª–∞—Ç
+ **D** - –ø–ª–æ—Ö–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –Ω–µ –º–æ–∂–µ–º –¥–∞—Ç—å –∫—Ä–µ–¥–∏—Ç
*/

//–ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª—Å—è



/*Task 1.2
+ –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –≥–ª–∞—Å–Ω—ã–µ –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Ç—Ä–æ–ª–ª–µ–π, –Ω–µ–π—Ç—Ä–∞–ª–∏–∑—É—è —É–≥—Ä–æ–∑—É.
+ –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º–∏ –≥–ª–∞—Å–Ω—ã–º–∏.
+ –ù–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–∞ ¬´This website is for losers LOL!¬ª —Å—Ç–∞–Ω–µ—Ç "Ths wbst s fr lsrs LL!".
> –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ **`y`** –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –≥–ª–∞—Å–Ω–æ–π.
*/
//–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä g = –≥–ª–æ–±–∞–ª—å–Ω—ã–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—Å–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º —à–∞–±–ª–æ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–µ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–º—É, i = –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ 

{
   //function declaration

   function deletionVowel(word) {
      return word.replace(/[aeiouAEIOU]/g, "");
   }

   console.log(deletionVowel("This website is for losers LOL"));

   //arrow function
   let deletionVowel2 = (word) => word.replace(/[aeiou]/gi, "");

   console.log(deletionVowel2("This website is for losers LOL"));
}

/*Task 1.3
–ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏, –Ω–µ—Ç —Ç–µ–æ—Ä–∏–∏
+ –í –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –ø—Ä–∏–º–µ—Ä–∞—Ö –ø–æ–∫–∞–∑–∞–Ω–æ, –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é:
> –ü–∞—Ä–∞–º–µ—Ç—Ä - —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª—é—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –æ—Ç a..z –∏ A..Z.
accum("abcd") -> "A-Bb-Ccc-Dddd"
accum("RqaEzty") -> "R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy"
accum("cwAt") -> "C-Ww-Aaa-Tttt"
*/

{
   const accum = letters => letters
      .split('')
      .map((ch, i) => (ch = ch.toLowerCase().repeat(i + 1)) && ch.charAt(0).toUpperCase() + ch.slice(1))
      .join('-');

   console.log(accum("abcd"));
   console.log(accum("RqaEzty"));
   console.log(accum("cwAt"));
}
// –ü–æ–¥—Å–º–æ—Ç—Ä–µ–ª –ø–æ—Ö–æ–∂–µ–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –ß—Ç–æ –¥–µ–ª–∞—é—Ç —ç—Ç–∏ –º–µ—Ç–æ–¥—ã –ø–æ–Ω–∏–º–∞—é (—Ç–æ–ª—å–∫–æ –ø—É—Ç–∞—é—Å—å –≤ –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –∏—Ö –ø—Ä–∏–º–µ–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ),–∏ –ø—É—Ç–∞—é—Å—å —Å –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏

/*Task 1.4
+ –í —ç—Ç–æ–º –Ω–µ–±–æ–ª—å—à–æ–º –∑–∞–¥–∞–Ω–∏–∏ –≤–∞–º –¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏, –∏ –≤—ã –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∏ –Ω–∞–∏–º–µ–Ω—å—à–µ–µ —á–∏—Å–ª–æ.
   highAndLow("1 2 3 4 5"); // return "5 1"
   highAndLow("1 2 -3 4 5"); // return "5 -3"
   highAndLow("1 9 3 4 -5"); // return "9 -5"
> –°—Ç—Ä–æ–∫–∞ –≤—ã–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –¥–≤—É—Ö —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º, –ø—Ä–∏ —ç—Ç–æ–º –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º.*/

// –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è ... –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –≤ –º–∞—Å—Å–∏–≤

{
   const highAndLow = "1 2 3 4 5";
   const highAndLow1 = "1 2 -3 4 5";
   const highAndLow2 = "1 9 3 4 -5";

   const arr = highAndLow.split(" ");
   console.log(arr);
   console.log(`return "${Math.max(...arr)} ${Math.min(...arr)}"`);

   const arr1 = highAndLow1.split(" ");
   console.log(arr1);
   console.log(`return "${Math.max(...arr1)} ${Math.min(...arr1)}"`);

   const arr2 = highAndLow2.split(" ");
   console.log(arr2);
   console.log(`return "${Math.max(...arr2)} ${Math.min(...arr2)}"`);
}

/*Task 1.5
+ –ò–∑–æ–≥—Ä–∞–º–º–∞ - —ç—Ç–æ —Å–ª–æ–≤–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –±—É–∫–≤, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∏–ª–∏ –Ω–µ–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö. 
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –∏–∑–æ–≥—Ä–∞–º–º–æ–π. 
–ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–≥—Ä–∞–º–º–æ–π. –†–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤ –º—ã –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º.
   isIsogram("Dermatoglyphics") == true
   isIsogram("aba") == false
   isIsogram("moOse") == false // -- ignore letter case
*/
//new Set() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
//size –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (—É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö) —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ Set

{
   function isIsogram(str) {
      return str.length == new Set(str.toLowerCase()).size;
   }

   console.log(`—Å–ª–æ–≤–æ –∏–∑–æ–≥—Ä–∞–º–º–∞ - ${isIsogram("Dermatoglyphics")}`);
   console.log(`—Å–ª–æ–≤–æ –∏–∑–æ–≥—Ä–∞–º–º–∞ - ${isIsogram("aba")}`);
   console.log(`—Å–ª–æ–≤–æ –∏–∑–æ–≥—Ä–∞–º–º–∞ - ${isIsogram("moOse")}`);
}

/*Task 1.6 üë®‚Äçüè´ –°—á–∏—Ç–∞–µ–º –∫–æ–¥—ã —Å–∏–º–≤–æ–ª–æ–≤
+ –£—á–∏—Ç—ã–≤–∞—è —Å—Ç—Ä–æ–∫—É, –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ –µ–≥–æ –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞ ASCII –∏ —Å–æ–µ–¥–∏–Ω–∏—Ç–µ –∏—Ö –≤–º–µ—Å—Ç–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —á–∏—Å–ª–æ. 
–ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é **`total1`**
+ –ó–∞—Ç–µ–º –∑–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ —á–∏—Å–ª–∞ `7` –Ω–∞ —á–∏—Å–ª–æ `1` –∏ –Ω–∞–∑–æ–≤–∏—Ç–µ —ç—Ç–æ —á–∏—Å–ª–æ **`total2`**
+ –ü–æ—Å–ª–µ –≤–µ—Ä–Ω–∏—Ç–µ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Å—É–º–º–æ–π —Ü–∏—Ñ—Ä **`total1`** –∏ **`total2`**
> 'ABC' --> 'A' = 65, 'B' = 66, 'C' = 67 --> 656667*/

{
   const str = "ABC";

   //–ø—Ä–µ–≤—Ä–∞—Ç–∏–ª–∏ –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞ ASCII
   const strArr = [];
   for (let index = 0; index < str.split("").length; index++) {
      strArr.push((str.split("")[index]).charCodeAt());
   }
   console.log(strArr);

   //—Å–æ–µ–¥–∏–Ω–∏–ª–∏ –∏—Ö –≤–º–µ—Å—Ç–µ –∏ –Ω–∞—à–ª–∏ –≤—Ç–æ—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
   const total1 = strArr.join("");
   console.log(total1);

   const total2 = total1.replaceAll(7, 1);
   console.log(total2);

   //–Ω–∞—à–ª–∏ —Å—É–º–º—ã —Ü–∏—Ñ—Ä –Ω–∞—à–∏—Ö —á–∏—Å–µ–ª
   let sum1Total1 = 0;
   let sum2Total2 = 0;

   for (let index = 0; index < total1.length; index++) {
      sum1Total1 += Number(total1[index]);
   }
   console.log(sum1Total1);

   for (let index = 0; index < total2.length; index++) {
      sum2Total2 += Number(total2[index]);
   }
   console.log(sum2Total2);

   //—Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–∑–Ω–∏—Ü—ã
   let result = sum1Total1 - sum2Total2;
   console.log(result);
}

/*Task 1.7 –î—É–±–ª–∏–∫–∞—Ç—ã
+ –¶–µ–ª—å —ç—Ç–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É, –≥–¥–µ –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ —Ä–∞–≤–µ–Ω 
**`(`**, –µ—Å–ª–∏ —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –∏–ª–∏ **`)`**, –µ—Å–ª–∏ —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª 
–≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ. –ò–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –¥—É–±–ª–∏–∫–∞—Ç–∞ —Å–∏–º–≤–æ–ª–∞.
   "din" => "((("
   "recede" => "()()()"
   "Success" => ")())())"
   "(( @" => "))(("
   */

{
   let word = "Success";
   let wordUp = word.toLowerCase();// —Ä–µ–≥–∏—Å—Ç—Ä —É–±—Ä–∞–ª —Ç–∞–∫, —á—Ç–æ-—Ç–æ –∑–∞–ø—É—Ç–∞–ª—Å—è –∏ –ø–æ –¥—Ä—É–≥–æ–º—É —É–∂–µ –Ω–µ –≤–∏–∂—É –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å
   let result = " ";
   for (let i = 0; i < wordUp.length; i++) {
      if (wordUp.split(wordUp[i]).length - 1 > 1) {
         result += ")";
      } else if (wordUp.split(wordUp[i]).length - 1 == 1) {
         result += "(";
      }
   }
   console.log(result);
}
